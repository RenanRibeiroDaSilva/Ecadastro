{"version":3,"sources":["components/Cabecalho.js","components/Rodape.js","pages/Inicio.js","constants/config.js","pages/CadastrosFuncionarios.js","routes/Rotas.js","App.js","index.js"],"names":["Cabecalho","Navbar","bg","variant","Brand","Nav","className","Link","href","Rodape","fixed","Inicio","Container","fluid","Row","Col","xs","lg","BACKEND","CadastrosFuncionarios","valorInicial","nome","idade","genero","profissao","status","useState","funcionario","setFuncionario","funcionarios","setFuncionarios","carregandoFuncionarios","setCarregandoFuncionarios","erros","setErros","aviso","setAviso","salvandoFuncionarios","setSalvandoFuncionarios","confirmaExclusao","setConfirmaExclusao","obterFuncionarios","a","url","fetch","then","response","json","data","catch","error","console","message","useEffect","document","title","validaErrosFuncionario","novosErros","length","event","preventDefault","Object","keys","metodo","hasOwnProperty","method","headers","Accept","body","JSON","stringify","_id","alteraDadosFuncionario","e","target","name","value","Form","Group","controlId","Label","Control","placeholder","onChange","isInvalid","Feedback","type","Check","label","checked","Button","onClick","salvarFuncionarios","Spinner","animation","size","disabled","as","role","Table","striped","bordered","map","item","Date","createdAt","toLocaleDateString","colSpan","Toast","onClose","show","delay","autohide","style","position","top","right","Header","closeButton","Body","Modal","onHide","Title","Footer","excluirFuncionario","Rotas","exact","path","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c7e3199b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nimport { MdHomeWork, MdAppRegistration } from \"react-icons/md\";\r\nimport { VscPersonAdd } from \"react-icons/vsc\" \r\n\r\n\r\nconst Cabecalho = () => {\r\n    return(\r\n    <Navbar bg=\"success\" variant=\"dark\">\r\n        <Navbar.Brand> <h1><b><VscPersonAdd/> E-cadastro</b></h1></Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#/\"><h4><MdHomeWork/> Início </h4></Nav.Link>\r\n            <Nav.Link href=\"#/cadastrosFuncionarios\"><h4><MdAppRegistration/> Cadastro de Funcionarios </h4></Nav.Link>\r\n        </Nav>\r\n    </Navbar>\r\n    )\r\n}\r\n\r\nexport default Cabecalho","import React from \"react\";\r\n\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nimport { VscPersonAdd } from \"react-icons/vsc\" \r\n\r\nconst Rodape = () => {\r\n    return(\r\n        <Navbar bg=\"dark\" fixed=\"bottom\">\r\n            <Navbar.Brand className=\"text-light\">\r\n                <h5><VscPersonAdd/> E-cadastro &copy; - Todos os direito reservados.</h5>\r\n            </Navbar.Brand>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Rodape","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport Cabecalho from \"../components/Cabecalho\";\r\nimport Rodape from \"../components/Rodape\";\r\n\r\nconst Inicio = () => {\r\n    return (\r\n        <Container fluid className=\"p-0\">\r\n            <Cabecalho />\r\n            <Row>\r\n                <Col xs={12} lg={6}>\r\n                    <h1><strong>Seja bem vindo ao E-cadastro!</strong></h1>\r\n                    <p><h4>Faça o cadastros de novos funcionario no menu acima!</h4></p>\r\n                </Col>\r\n            </Row>\r\n            <Rodape />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Inicio","export const BACKEND = \"https://cadastro-funcionarios-gti.herokuapp.com\"\r\n\r\nconst config = { BACKEND }\r\n\r\nexport default config","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Button, Spinner, Table, Form, Toast, Modal } from \"react-bootstrap\";\r\n\r\nimport { BsPersonPlusFill } from \"react-icons/bs\"\r\nimport { FaClipboardList } from \"react-icons/fa\"\r\nimport { GrFormEdit } from \"react-icons/gr\"\r\nimport { MdOutlineDeleteOutline, MdSaveAlt } from \"react-icons/md\"\r\n\r\nimport Cabecalho from \"../components/Cabecalho\";\r\nimport Rodape from \"../components/Rodape\";\r\nimport { BACKEND } from \"../constants\";\r\n\r\nconst CadastrosFuncionarios = () => {\r\n    const valorInicial = { nome: '', idade: '', genero: '', profissao: '', status: true }\r\n    const [funcionario, setFuncionario] = useState(valorInicial)\r\n    const [funcionarios, setFuncionarios] = useState([])\r\n    const [carregandoFuncionarios, setCarregandoFuncionarios] = useState(false)\r\n    const [erros, setErros] = useState({})\r\n    const [aviso, setAviso] = useState('')\r\n    const [salvandoFuncionarios, setSalvandoFuncionarios] = useState(false)\r\n    const [confirmaExclusao, setConfirmaExclusao] = useState(false)\r\n\r\n    const { nome, idade, genero, profissao, status } = funcionario\r\n\r\n    async function obterFuncionarios() {\r\n        setCarregandoFuncionarios(true)\r\n        let url = `${BACKEND}/funcionarios`\r\n        await fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                //console.log(data)\r\n                setFuncionarios(data)\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Erro ao obeter o cadastro dos funcionarios: ' + error.message)\r\n            })\r\n        setCarregandoFuncionarios(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        obterFuncionarios()\r\n        document.title = 'Cadastro de Funcionarios'\r\n    }, [])\r\n\r\n    const validaErrosFuncionario = () => {\r\n        const novosErros = {}\r\n        //Validação do campo Nome:\r\n        if (!nome || nome === '') novosErros.nome = 'O campo nome não pode estar vazio!'\r\n        else if (nome.length > 100) novosErros.nome = 'O nome informado é muito grande!'\r\n        else if (nome.length < 3) novosErros.nome = 'O nome informado é muito curto!'\r\n\r\n        //Validação do campo Idade:\r\n        if (!idade || idade === '') novosErros.idade = 'O campo idade não pode estar vazio!'\r\n        else if (idade.length > 3) novosErros.idade = 'O campo idade não pode ser maior que 999!'\r\n\r\n        //Validação do campo Genero:\r\n        if (!genero || genero === '') novosErros.genero = 'O campo genero não pode estar vazio!'\r\n\r\n        //Validação do campo Profissão:\r\n        if (!profissao || profissao === '') novosErros.profissao = 'O campo profissao não pode estar vazio!'\r\n        else if (profissao.length > 100) novosErros.profissao = 'O profissao informado é muito grande!'\r\n        else if (profissao.length < 3) novosErros.profissao = 'O profissao informado é muito curto!'\r\n\r\n        return novosErros\r\n    }\r\n\r\n    async function salvarFuncionarios(event) {\r\n        event.preventDefault() //Evita que a página seja recarregada\r\n        const novosErros = validaErrosFuncionario()\r\n        if (Object.keys(novosErros).length > 0) {\r\n            //Sim. Temos erros!\r\n            setErros(novosErros)\r\n        } else {\r\n            setSalvandoFuncionarios(true)\r\n            const metodo = funcionario.hasOwnProperty('_id') ? 'PUT' : 'POST'\r\n            funcionario.status = (funcionario.status === true || funcionario.status === 'ativo') ? 'ativo' : 'inativo'\r\n            let url = `${BACKEND}/funcionarios`\r\n            await fetch(url, {\r\n                method: metodo,\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(funcionario)\r\n            }).then(response => response.json())\r\n            .then(data => {\r\n                (data._id || data.message) ? setAviso('Registro salvo com sucesso') : setAviso('')\r\n                setFuncionario(valorInicial) // Lipar  a tela com os valores iniciais\r\n                obterFuncionarios() // Atualiza a tela com os registros atualizados\r\n            }).catch(function (error){\r\n                console.error(`Erro ao salvar a categoria: ${error.message}`)  \r\n            })\r\n            setSalvandoFuncionarios(false)\r\n        }\r\n    }\r\n\r\n    async function excluirFuncionario(){\r\n        let url = `${BACKEND}/funcionarios/${funcionario._id}`\r\n        await fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n        .then(data => {\r\n            data.message ? setAviso(data.message) : setAviso('')\r\n            obterFuncionarios()\r\n        })\r\n        .catch(function (error) {\r\n            console.error(`Erro ao excluir o funcionario: ${error.message}`)\r\n        })\r\n    }\r\n\r\n    const alteraDadosFuncionario = e => {\r\n        setFuncionario({ ...funcionario, [e.target.name]: e.target.value })\r\n        setErros({})\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"p-0\" >\r\n            <Cabecalho />\r\n            <Row>\r\n                <Col xs={12} lg={4}>\r\n                    {/*Formulario do cadastro dos funcionarios*/}\r\n                    <h4>&nbsp; <BsPersonPlusFill /> Cadastro dos Funcionarios</h4>\r\n                    <Form method=\"post\">\r\n                        <Form.Group controlId=\"nome\">\r\n                            <Form.Label>Nome do funcionario</Form.Label>\r\n                            <Form.Control\r\n                                name=\"nome\"\r\n                                placeholder=\"Ex: João\"\r\n                                value={nome}\r\n                                onChange={alteraDadosFuncionario}\r\n                                isInvalid={!!erros.nome} />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                {erros.nome}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"idade\">\r\n                            <Form.Label>Idade do funcionario</Form.Label>\r\n                            <Form.Control\r\n                                name=\"idade\"\r\n                                placeholder=\"Ex: 22\"\r\n                                value={idade}\r\n                                onChange={alteraDadosFuncionario}\r\n                                isInvalid={!!erros.idade} />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                {erros.idade}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"genero\">\r\n                            <Form.Label>Gênero do funcionario</Form.Label>\r\n                            <Form.Control\r\n                                name=\"genero\"\r\n                                placeholder=\"Ex: Masculino\"\r\n                                value={genero}\r\n                                onChange={alteraDadosFuncionario}\r\n                                isInvalid={!!erros.genero} />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                {erros.genero}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"profissao\">\r\n                            <Form.Label>Profissão do funcionario</Form.Label>\r\n                            <Form.Control\r\n                                name=\"profissao\"\r\n                                placeholder=\"Ex: Motorista\"\r\n                                value={profissao}\r\n                                onChange={alteraDadosFuncionario}\r\n                                isInvalid={!!erros.profissao} />\r\n                            <Form.Control.Feedback type='invalid'>\r\n                                {erros.profissao}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"status\">\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Ativo\"\r\n                                name=\"status\"\r\n                                onChange={(e) => setFuncionario({ ...funcionario, [e.target.name]: e.target.checked })}\r\n                                checked={status} />\r\n                        </Form.Group>\r\n                        <Button variant=\"success\" type=\"submit\" onClick={(e) => salvarFuncionarios(e)} title=\"Cadastrar\">\r\n                            {salvandoFuncionarios\r\n                                ? <><Spinner animation=\"border\" size=\"sm\"/> Aguarde...</>\r\n                                : <> <MdSaveAlt /> Cadastrar novo funcionario</>\r\n                            }\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n                <Col xs={12} lg={8}>\r\n                    {/*Listagem do cadastro dos funcionarios*/}\r\n                    <h4>&nbsp; <FaClipboardList /> Listagem dos Funcionarios</h4>\r\n                    {carregandoFuncionarios && <>\r\n                        <Button variant=\"success\" disabled>\r\n                            <Spinner\r\n                                as=\"span\"\r\n                                animation=\"grow\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            Carregando...\r\n                        </Button>\r\n                    </>}\r\n                    <Table striped bordered>\r\n                        <thead>\r\n                            <tr className=\"bg-dark text-light\">\r\n                                <th>Nome</th>\r\n                                <th>Idade</th>\r\n                                <th>Genero</th>\r\n                                <th>Profissão</th>\r\n                                <th>Status</th>\r\n                                <th>Inclusão</th>\r\n                                <th>Opções</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {funcionarios.map(item => (\r\n                                <tr key={item._id}>\r\n                                    <td>{item.nome}</td>\r\n                                    <td>{item.idade}</td>\r\n                                    <td>{item.genero}</td>\r\n                                    <td>{item.profissao}</td>\r\n                                    <td>{item.status}</td>\r\n                                    <td>{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                                    <td>\r\n                                        <Button variant=\"success\" title=\"Editar os registos\">\r\n                                            <GrFormEdit />\r\n                                        </Button>\r\n                                        &nbsp;\r\n                                        <Button variant=\"danger\" title=\"Deletar o registro\"\r\n                                        onClick={() => {\r\n                                            setConfirmaExclusao(true)\r\n                                            setFuncionario(item)\r\n                                        }}\r\n                                        >\r\n                                            <MdOutlineDeleteOutline />\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            <tr className=\"bg-secondary text-light\">\r\n                                <td colSpan=\"6\">Total de registos</td>\r\n                                <td>{funcionarios.length}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n            <Toast\r\n                onClose={() => setAviso('')}\r\n                show={aviso.length > 0}\r\n                animation={false}\r\n                delay={4000}\r\n                autohide\r\n                className=\"bg-warning\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 10,\r\n                    right: 10\r\n                }}>\r\n                <Toast.Header closeButton={false}>Aviso</Toast.Header>\r\n                <Toast.Body>{aviso}</Toast.Body>\r\n            </Toast>\r\n            <Modal animation={false} show={confirmaExclusao}\r\n            onHide={()=> setConfirmaExclusao(false)}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Confirmação da Exclusão</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Confirma a exclusão do funcionario selecionado?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setConfirmaExclusao(!confirmaExclusao)}>\r\n                    ❌Cancelar\r\n                    </Button>\r\n                    <Button variant=\"success\"\r\n                    onClick={() => {\r\n                        excluirFuncionario()\r\n                        setConfirmaExclusao(!confirmaExclusao)\r\n                    }}>\r\n                    ✅Confirmar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <Rodape />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastrosFuncionarios","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Inicio from '../pages/Inicio'\r\nimport CadastrosFuncionarios from '../pages/CadastrosFuncionarios'\r\n\r\nexport default function Rotas(){\r\n    return(\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Inicio} />\r\n                <Route exact path=\"/cadastrosFuncionarios\" component={CadastrosFuncionarios} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Rotas from \"./routes/Rotas\";\n\nconst App = () => {\n  return(\n    <Rotas />\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n<meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\"></meta>\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}